<?xml version="1.0" encoding="UTF-8" ?> <!-- XML 선언. 반드시 첫 번째로 와야 한다. -->

<!-- XML 태그의 형식에 대한 정보.
루트 엘리먼트(=태그): configuration
형식에 대한 공식적인(PUBLIC) 이름: "-//mybatis.org//DTD Config 3.0//EN"
형식을 정의한 파일: "http://mybatis.org/dtd/mybatis-3-config.dtd"
 -->
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
  
<!-- mybatis 설정 파일의 루트 엘리먼트 -->  
<configuration>
  
  <!-- jdbc.properties 파일의 정보를 로딩한다. -->
  <properties resource="ch26/c/jdbc.properties"/>
  
  <!-- SQL 매퍼에서 사용할 클래스에 대한 별명을 설정한다. 
    mybatis에서 자바 기본 타입과 주요 클래스에 대해 설정해둔 별명이 있다. 문서를 참고하라!
  -->
  <typeAliases>
    <!-- 패키지를 지정하면 그 패키지에 소속된 모든 클래스에 대해 자동으로 별명을 부여한다.
         별명은 클래스 이름이다. -->
    <package name="ch26.c"/>
    
    <!-- 물론 다음과 같이 각각의 클래스에 대해 별명을 지정할 수 있다. -->
    <!--  
    <typeAlias type="ch26.c.Board" alias="board"/>
    -->
  </typeAliases>

  <!-- DBMS 접속 정보 목록 -->
  <environments default="development">
  
    <!-- 한 개의 DBMS 접속 정보  -->
    <environment id="development">
    
      <!-- 트랜잭션 관리 방법 -->
      <transactionManager type="JDBC"/>
      
      <!-- 커넥션풀 설정 -->
      <dataSource type="POOLED">
      
        <!-- 로딩된 .properties 파일의 데이터를 꺼낼 때는 ${key} 문법을 사용한다. -->
        <property name="driver" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
      </dataSource>
    </environment>
  </environments>
  
  <!-- SQL이 보관된 파일의 목록 -->
  <mappers>
  
    <!-- SQL이 보관된 파일의 경로 -->
    <mapper resource="ch26/c/BoardMapper.xml"/>
  </mappers>
</configuration>






